{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/layout/Header.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","onKeyDown","role","tabIndex","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","e","target","IndividualProject","deleteProject","window","confirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","Header","darkMode","setDarkMode","setShouldShowMain","showSidebar","setShowSidebar","src","alt","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getCollatedTitle","length","getTitle","document","title","Content","App","darkModeDefault","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16d3914a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBbX8PPcYYC2IJ8dzDrN27eIETZ-vD87o0\",\r\n  authDomain: \"sunil-todolist.firebaseapp.com\",\r\n  databaseURL: \"https://sunil-todolist.firebaseio.com\",\r\n  projectId: \"sunil-todolist\",\r\n  storageBucket: \"sunil-todolist.appspot.com\",\r\n  messagingSenderId: \"226318675066\",\r\n  appId: \"1:226318675066:web:f98097f3382d79fba3dfc3\",\r\n});\r\n\r\nexport { firebaseConfig as firebase };\r\n","export const collatedTasks = [\r\n  { key: \"INBOX\", name: \"Inbox\" },\r\n  { key: \"TODAY\", name: \"Today\" },\r\n  { key: \"NEXT_7\", name: \"Next 7 days\" },\r\n];\r\n","import { collatedTasks } from \"../constants\";\r\n\r\nexport const collatedTasksExist = (selectedProject) =>\r\n  collatedTasks.find((task) => task.key === selectedProject);\r\n\r\nexport const getTitle = (projects, projectId) =>\r\n  projects.find((project) => project.projectId === projectId);\r\n\r\nexport const getCollatedTitle = (projects, key) =>\r\n  projects.find((project) => project.key === key);\r\n\r\nexport const generatePushId = (() => {\r\n  const PUSH_CHARS =\r\n    \"-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\";\r\n\r\n  const lastRandChars = [];\r\n\r\n  return function () {\r\n    let now = new Date().getTime();\r\n\r\n    const timeStampChars = new Array(8);\r\n    for (var i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n      now = Math.floor(now / 64);\r\n    }\r\n\r\n    let id = timeStampChars.join(\"\");\r\n\r\n    for (i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n\r\n    return id;\r\n  };\r\n})();\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { useProjects } from \"../hooks\";\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsProvider = ({ children }) => {\r\n  const { projects, setProjects } = useProjects();\r\n\r\n  return (\r\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\r\n      {children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectsValue = () => useContext(ProjectsContext);\r\n","import { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { firebase } from \"../firebase\";\r\nimport { collatedTasksExist } from \"../helpers\";\r\n\r\nexport const useTasks = (selectedProject) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"tasks\")\r\n      .where(\"userId\", \"==\", \"kKpNM4e7DpwOywNkaFoo\");\r\n\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where(\"projectId\", \"==\", selectedProject))\r\n        : selectedProject === \"TODAY\"\r\n        ? (unsubscribe = unsubscribe.where(\r\n            \"date\",\r\n            \"==\",\r\n            moment().format(\"DD/MM/YYYY\")\r\n          ))\r\n        : selectedProject === \"INBOX\" || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where(\"date\", \"==\", \"\"))\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot((snapshot) => {\r\n      const newTasks = snapshot.docs.map((task) => ({\r\n        id: task.id,\r\n        ...task.data(),\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === \"NEXT_7\"\r\n          ? newTasks.filter(\r\n              (task) =>\r\n                moment(task.date, \"DD-MM-YYYY\").diff(moment(), \"days\") <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter((task) => task.archived !== true)\r\n      );\r\n\r\n      setArchivedTasks(newTasks.filter((task) => task.archived !== false));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [selectedProject]);\r\n\r\n  return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .where(\"userId\", \"==\", \"kKpNM4e7DpwOywNkaFoo\")\r\n      .orderBy(\"projectId\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const allProjects = snapshot.docs.map((project) => ({\r\n          ...project.data(),\r\n          docId: project.id,\r\n        }));\r\n\r\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n          setProjects(allProjects);\r\n        }\r\n      });\r\n  }, [projects]);\r\n\r\n  return { projects, setProjects };\r\n};\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({ children }) => {\r\n  const [selectedProject, setSelectedProject] = useState(\"INBOX\");\r\n\r\n  return (\r\n    <SelectedProjectContext.Provider\r\n      value={{ selectedProject, setSelectedProject }}\r\n    >\r\n      {children}\r\n    </SelectedProjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useProjectsValue } from \"../context\";\r\n\r\nexport const ProjectOverlay = ({\r\n  setProject,\r\n  showProjectOverlay,\r\n  setShowProjectOverlay,\r\n}) => {\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    showProjectOverlay && (\r\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n        <ul className=\"project-overlay__list\">\r\n          {projects.map((project) => (\r\n            <li key={project.projectId}>\r\n              <div\r\n                data-testid=\"project-overlay-action\"\r\n                onClick={() => {\r\n                  setProject(project.projectId);\r\n                  setShowProjectOverlay(false);\r\n                }}\r\n                onKeyDown={() => {\r\n                  setProject(project.projectId);\r\n                  setShowProjectOverlay(false);\r\n                }}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-label=\"Select the task project\"\r\n              >\r\n                {project.name}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProjectOverlay.propTypes = {\r\n  projects: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\r\n  showTaskDate && (\r\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n      <ul className=\"task-date__list\">\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format(\"DD/MM/YYYY\"));\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format(\"DD/MM/YYYY\"));\r\n            }}\r\n            data-testid=\"task-date-today\"\r\n            tabIndex={0}\r\n            aria-label=\"Select today as the task date\"\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaSpaceShuttle />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().add(1, \"day\").format(\"DD/MM/YYYY\"));\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().add(1, \"day\").format(\"DD/MM/YYYY\"));\r\n            }}\r\n            data-testid=\"task-date-tomorrow\"\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            aria-label=\"Select tomorrow as the task date\"\r\n          >\r\n            <span>\r\n              <FaSun />\r\n            </span>\r\n            <span>Tomorrow</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().add(7, \"days\").format(\"DD/MM/YYYY\"));\r\n            }}\r\n            onKeyDown={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().add(7, \"days\").format(\"DD/MM/YYYY\"));\r\n            }}\r\n            data-testid=\"task-date-next-week\"\r\n            aria-label=\"Select next week as the task date\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaRegPaperPlane />\r\n            </span>\r\n            <span>Next week</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\nTaskDate.propTypes = {\r\n  setTaskDate: PropTypes.func.isRequired,\r\n  showTaskDate: PropTypes.bool.isRequired,\r\n  setShowTaskDate: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaRegListAlt, FaRegCalendarAlt } from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firebase } from \"../firebase\";\r\nimport { useSelectedProjectValue } from \"../context\";\r\nimport { ProjectOverlay } from \"./ProjectOverlay\";\r\nimport { TaskDate } from \"./TaskDate\";\r\n\r\nexport const AddTask = ({\r\n  showAddTaskMain = true,\r\n  shouldShowMain = false,\r\n  showQuickAddTask,\r\n  setShowQuickAddTask,\r\n}) => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [taskDate, setTaskDate] = useState(\"\");\r\n  const [project, setProject] = useState(\"\");\r\n  const [showMain, setShowMain] = useState(shouldShowMain);\r\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n  const [showTaskDate, setShowTaskDate] = useState(false);\r\n\r\n  const { selectedProject } = useSelectedProjectValue();\r\n\r\n  const addTask = () => {\r\n    const projectId = project || selectedProject;\r\n    let collatedDate = \"\";\r\n\r\n    if (projectId === \"TODAY\") {\r\n      collatedDate = moment().format(\"DD/MM/YYYY\");\r\n    } else if (projectId === \"NEXT_7\") {\r\n      collatedDate = moment().add(7, \"days\").format(\"DD/MM/YYYY\");\r\n    }\r\n\r\n    return (\r\n      task &&\r\n      projectId &&\r\n      firebase\r\n        .firestore()\r\n        .collection(\"tasks\")\r\n        .add({\r\n          archived: false,\r\n          projectId,\r\n          task,\r\n          date: collatedDate || taskDate,\r\n          userId: \"kKpNM4e7DpwOywNkaFoo\",\r\n        })\r\n        .then(() => {\r\n          setTask(\"\");\r\n          setProject(\"\");\r\n          setShowMain(\"\");\r\n          setShowProjectOverlay(false);\r\n        })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={showQuickAddTask ? \"add-task add-task__overlay\" : \"add-task\"}\r\n      data-testid=\"add-task-comp\"\r\n    >\r\n      {showAddTaskMain && (\r\n        <div\r\n          className=\"add-task__shallow\"\r\n          data-testid=\"show-main-action\"\r\n          onClick={() => setShowMain(!showMain)}\r\n          onKeyDown={() => setShowMain(!showMain)}\r\n          tabIndex={0}\r\n          aria-label=\"Add task\"\r\n          role=\"button\"\r\n        >\r\n          <span className=\"add-task__plus\">+</span>\r\n          <span className=\"add-task__text\">Add Task</span>\r\n        </div>\r\n      )}\r\n\r\n      {(showMain || showQuickAddTask) && (\r\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\r\n          {showQuickAddTask && (\r\n            <>\r\n              <div data-testid=\"quick-add-task\">\r\n                <h2 className=\"header\">Quick Add Task</h2>\r\n                <span\r\n                  className=\"add-task__cancel-x\"\r\n                  data-testid=\"add-task-quick-cancel\"\r\n                  aria-label=\"Cancel adding task\"\r\n                  onClick={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  onKeyDown={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  tabIndex={0}\r\n                  role=\"button\"\r\n                >\r\n                  X\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n          <ProjectOverlay\r\n            setProject={setProject}\r\n            showProjectOverlay={showProjectOverlay}\r\n            setShowProjectOverlay={setShowProjectOverlay}\r\n          />\r\n          <TaskDate\r\n            setTaskDate={setTaskDate}\r\n            showTaskDate={showTaskDate}\r\n            setShowTaskDate={setShowTaskDate}\r\n          />\r\n          <input\r\n            className=\"add-task__content\"\r\n            aria-label=\"Enter your task\"\r\n            data-testid=\"add-task-content\"\r\n            type=\"text\"\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-task__submit\"\r\n            data-testid=\"add-task\"\r\n            onClick={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n          >\r\n            Add Task\r\n          </button>\r\n          {!showQuickAddTask && (\r\n            <span\r\n              className=\"add-task__cancel\"\r\n              data-testid=\"add-task-main-cancel\"\r\n              onClick={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              onKeyDown={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              aria-label=\"Cancel adding a task\"\r\n              tabIndex={0}\r\n              role=\"button\"\r\n            >\r\n              Cancel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"add-task__project\"\r\n            data-testid=\"show-project-overlay\"\r\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            onKeyDown={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <FaRegListAlt />\r\n          </span>\r\n          <span\r\n            className=\"add-task__date\"\r\n            data-testid=\"show-task-date-overlay\"\r\n            onClick={() => setShowTaskDate(!showTaskDate)}\r\n            onKeyDown={() => setShowTaskDate(!showTaskDate)}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <FaRegCalendarAlt />\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTask.propTypes = {\r\n  showAddTaskMain: PropTypes.bool,\r\n  shouldShowMain: PropTypes.bool,\r\n  showQuickAddTask: PropTypes.bool,\r\n  setShowQuickAddTask: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useProjectsValue, useSelectedProjectValue } from \"../context\";\r\nimport { firebase } from \"../firebase\";\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n  // const [showConfirm, setShowConfirm] = useState(false);\r\n  const { projects, setProjects } = useProjectsValue();\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n  const deleteProject = (docId) => {\r\n    if (window.confirm(\"Are you sure you wish to delete the project?\"))\r\n      firebase\r\n        .firestore()\r\n        .collection(\"projects\")\r\n        .doc(docId)\r\n        .delete()\r\n        .then(() => {\r\n          setProjects([...projects]);\r\n          setSelectedProject(\"INBOX\");\r\n        });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"sidebar__dot\">•</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n      <span\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => deleteProject(project.docId)}\r\n        onKeyDown={() => deleteProject(project.docId)}\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        aria-label=\"Confirm deletion of project\"\r\n      >\r\n        <FaTrashAlt />\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nIndividualProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\nimport { IndividualProject } from \"./IndividualProject\";\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    projects.map((project) => (\r\n      <li\r\n        key={project.projectId}\r\n        data-testid=\"project-action-parent\"\r\n        data-doc-id={project.docId}\r\n        className={\r\n          active === project.projectId\r\n            ? \"active sidebar__project\"\r\n            : \"sidebar__project\"\r\n        }\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          data-testid=\"project-action\"\r\n          tabIndex={0}\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          onClick={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n          onKeyDown={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n        >\r\n          <IndividualProject project={project} />\r\n        </div>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  activeValue: PropTypes.bool,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firebase } from \"../firebase\";\r\nimport { generatePushId } from \"../helpers\";\r\nimport { useProjectsValue } from \"../context\";\r\n\r\nexport const AddProject = ({ shouldShow = false }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n\r\n  const projectId = generatePushId();\r\n  const { projects, setProjects } = useProjectsValue();\r\n\r\n  const addProject = () =>\r\n    projectName &&\r\n    firebase\r\n      .firestore()\r\n      .collection(\"projects\")\r\n      .add({\r\n        projectId,\r\n        name: projectName,\r\n        userId: \"kKpNM4e7DpwOywNkaFoo\",\r\n      })\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setProjectName(\"\");\r\n        setShow(false);\r\n      });\r\n\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add Project\r\n          </button>\r\n          <span\r\n            aria-label=\"Cancel adding project\"\r\n            data-testid=\"hide-project-overlay\"\r\n            className=\"add-project__cancel\"\r\n            onClick={() => setShow(false)}\r\n            onKeyDown={() => setShow(false)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <span className=\"add-project__plus\">+</span>\r\n      <span\r\n        aria-label=\"Add Project\"\r\n        data-testid=\"add-project-action\"\r\n        className=\"add-project__text\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyDown={() => setShow(!show)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        Add Project\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddProject.propTypes = {\r\n  shouldShow: PropTypes.bool,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FaChevronDown,\r\n  FaInbox,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar,\r\n} from \"react-icons/fa\";\r\nimport { Projects } from \"../Projects\";\r\nimport { useSelectedProjectValue } from \"../../context\";\r\nimport { AddProject } from \"../AddProject\";\r\n\r\nexport const Sidebar = () => {\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const [active, setActive] = useState(\"inbox\");\r\n  const [showProjects, setShowProjects] = useState(true);\r\n\r\n  return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n      <ul className=\"sidebar__generic\">\r\n        <li\r\n          data-testid=\"inbox\"\r\n          className={active === \"inbox\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            aria-label=\"Show inbox tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"inbox\");\r\n              setSelectedProject(\"INBOX\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaInbox />\r\n            </span>\r\n            <span>Inbox</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          data-testid=\"today\"\r\n          className={active === \"today\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"today-action\"\r\n            aria-label=\"Show today's tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"today\");\r\n              setSelectedProject(\"TODAY\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendar />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          data-testid=\"next_7\"\r\n          className={active === \"next_7\" ? \"active\" : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"next_7-action\"\r\n            aria-label=\"Show tasks for the next 7 days\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n            onKeyDown={() => {\r\n              setActive(\"next_7\");\r\n              setSelectedProject(\"NEXT_7\");\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendarAlt />\r\n            </span>\r\n            <span>Next 7 days</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        className=\"sidebar__middle\"\r\n        aria-label=\"Show/hide projects\"\r\n        onClick={() => setShowProjects(!showProjects)}\r\n        onKeyDown={() => setShowProjects(!showProjects)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <span>\r\n          <FaChevronDown\r\n            className={!showProjects ? \"hidden-projects\" : undefined}\r\n          />\r\n        </span>\r\n        <h2>Projects</h2>\r\n      </div>\r\n\r\n      <ul className=\"sidebar__projects\">\r\n        {showProjects && <Projects activeValue={active} />}\r\n      </ul>\r\n\r\n      {showProjects && <AddProject />}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FaPizzaSlice } from \"react-icons/fa\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AddTask } from \"../AddTask\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nexport const Header = ({ darkMode, setDarkMode }) => {\r\n  const [shouldShowMain, setShouldShowMain] = useState(false);\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n  const [showSidebar, setShowSidebar] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\" data-testid=\"header\">\r\n        <nav>\r\n          <div className=\"logo\" onClick={() => setShowSidebar(!showSidebar)}>\r\n            <img src=\"/images/logo.png\" alt=\"Todoist\" />\r\n          </div>\r\n          <div className=\"settings\">\r\n            <ul>\r\n              <li className=\"settings__add\">\r\n                <button\r\n                  data-testid=\"quick-add-task-action\"\r\n                  aria-label=\"Quick add task\"\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setShowQuickAddTask(true);\r\n                    setShouldShowMain(true);\r\n                  }}\r\n                  onKeyDown={() => {\r\n                    setShowQuickAddTask(true);\r\n                    setShouldShowMain(true);\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n              </li>\r\n              <li className=\"settings__darkmode\">\r\n                <button\r\n                  data-testid=\"dark-mode-action\"\r\n                  aria-label=\"Darkmode on/off\"\r\n                  type=\"button\"\r\n                  onClick={() => setDarkMode(!darkMode)}\r\n                  onKeyDown={() => setDarkMode(!darkMode)}\r\n                >\r\n                  <FaPizzaSlice />\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <AddTask\r\n          showAddTaskMain={false}\r\n          shouldShowMain={shouldShowMain}\r\n          showQuickAddTask={showQuickAddTask}\r\n          setShowQuickAddTask={setShowQuickAddTask}\r\n        />\r\n      </header>\r\n      {showSidebar && (\r\n        <div className=\"content\">\r\n          <Sidebar />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  darkMode: PropTypes.bool.isRequired,\r\n  setDarkMode: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firebase } from \"../firebase\";\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase.firestore().collection(\"tasks\").doc(id).update({\r\n      archived: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={() => archiveTask()}\r\n      aria-label={`Mark ${taskDesc} as done?`}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  taskDesc: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Checkbox } from \"./Checkbox\";\r\nimport { AddTask } from \"./AddTask\";\r\nimport { useTasks } from \"../hooks\";\r\nimport { collatedTasks } from \"../constants\";\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from \"../helpers\";\r\nimport { useSelectedProjectValue, useProjectsValue } from \"../context\";\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = \"\";\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  if (\r\n    projects &&\r\n    projects.length > 0 &&\r\n    selectedProject &&\r\n    !collatedTasksExist(selectedProject)\r\n  ) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName} : Todoist`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map((task) => (\r\n          <li key={`${task.id}`}>\r\n            <Checkbox id={task.id} taskDesc={task.task} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sidebar } from \"./Sidebar\";\r\nimport { Tasks } from \"../Tasks\";\r\n\r\nexport const Content = () => {\r\n  return (\r\n    <section className=\"content\">\r\n      {/* <Sidebar /> */}\r\n      <Tasks />\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Header } from \"./components/layout/Header\";\r\nimport { Content } from \"./components/layout/Content\";\r\nimport { ProjectsProvider, SelectedProjectProvider } from \"./context\";\r\n\r\nexport const App = ({ darkModeDefault = false }) => {\r\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\r\n  return (\r\n    <SelectedProjectProvider>\r\n      <ProjectsProvider>\r\n        <main\r\n          data-testid=\"application\"\r\n          className={darkMode ? \"darkmode\" : undefined}\r\n        >\r\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\r\n          <Content />\r\n        </main>\r\n      </ProjectsProvider>\r\n    </SelectedProjectProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./App.scss\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}